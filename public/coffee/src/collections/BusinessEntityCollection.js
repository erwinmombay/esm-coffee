// Generated by CoffeeScript 1.4.0
var fieldItems, model, parsedModel, parsedResponse, _i, _len, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var BaseCollection, BusinessEntityCollection, BusinessEntityModel, _;
  _ = require('underscore');
  BaseCollection = require('collections/BaseCollection');
  BusinessEntityModel = require('models/BusinessEntityModel');
  return BusinessEntityCollection = (function(_super) {

    __extends(BusinessEntityCollection, _super);

    function BusinessEntityCollection() {
      return BusinessEntityCollection.__super__.constructor.apply(this, arguments);
    }

    BusinessEntityCollection.prototype.model = BusinessEntityModel;

    BusinessEntityCollection.prototype.url = 'api/businessentity/';

    BusinessEntityCollection.prototype.parse = function(response) {};

    return BusinessEntityCollection;

  })(BaseCollection);
});

parsedResponse = [];

for (_i = 0, _len = response.length; _i < _len; _i++) {
  model = response[_i];
  parsedModel = {};
  _ref = model.Fields.FieldItems;
  for (fieldItems in _ref) {
    if (!__hasProp.call(_ref, fieldItems)) continue;
    parseModel[fieldItems.Name] = fieldItems.Value;
  }
  parsedResponse.push(parsedModel);
}

parsedResponse;

