// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var BaseModel, BusinessEntityModel, _;
  _ = require('underscore');
  BaseModel = require('models/BaseModel');
  return BusinessEntityModel = (function(_super) {

    __extends(BusinessEntityModel, _super);

    function BusinessEntityModel() {
      return BusinessEntityModel.__super__.constructor.apply(this, arguments);
    }

    BusinessEntityModel.prototype.defaults = {
      code: '',
      name: '',
      address1: '',
      address2: '',
      city: '',
      stateOrProvince: '',
      postalCode: '',
      country: '',
      primaryIndustry: '',
      parentID: '',
      edictTestEntity: ''
    };

    BusinessEntityModel.prototype.url = function() {
      return "api/businessentity/" + this.id;
    };

    BusinessEntityModel.prototype.initialize = function(options) {};

    BusinessEntityModel.prototype.parse = function(response) {
      var field, parsedResponse, _i, _len, _ref;
      if ((response != null ? response.Fields : void 0) != null) {
        parsedResponse = {
          id: response.ID
        };
        _ref = response.Fields.FieldItems;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          parsedResponse[field.Name] = field.Value;
        }
        parsedResponse;

      }
      return response;
    };

    return BusinessEntityModel;

  })(BaseModel);
});
